<template>
	<view class="uni-container">
		<view>tabBar1</view>
		<view :class="{'pc-hide': hideList.indexOf(item.url) !== -1  && hasLeftWin}" class="uni-panel" v-for="(item, index) in list" :key="item.id">
			<view :class="{'left-win-active': leftWinActive === item.url  && hasLeftWin, 'uni-panel-h-on': activeOpen === item.id}" class="uni-panel-h" @click="triggerCollapse(index, item.id)">
				<text class="uni-panel-text">{{item.name}}</text>
				<uni-icons v-if="item.pages" type="arrowdown" size="14" :class="activeOpen === item.id  ? 'uni-panel-icon-on' : ''"></uni-icons>
			</view>
			<view class="uni-panel-c" v-if="activeOpen === item.id ">
				<view :class="{'left-win-active': leftWinActive === item2.url  && hasLeftWin, 'pc-hide': hideList.indexOf(item2.url) !== -1  && hasLeftWin}" class="uni-navigate-item" v-for="(item2,key) in item.pages" :key="key" @click="goDetailPage(item2)">
					<text class="uni-navigate-text uni-panel-text-indent">{{item2.name ? item2.name : item2}}</text>
					<uni-icons type="arrowthinright" size="14"></uni-icons>
				</view>
			</view>
		</view>
	</view>
</template>
<script>
	import { mapState, mapMutations } from 'vuex';
	export default {
		data() {
			return {
				hideList: [
					'ucharts',
					'nav-city-dropdown'
				],
				list: [
					// #ifdef H5
					{
					    name: '权限管理',
					    url: 'Authority'
					},
					{
						id: 'Account',
						name: '账号分配',
						open: false,
						pages: [
							{
								name: '导航栏带自定义按钮',
								url: 'nav-button'
							},
						]
					},
					{
						id: 'Monitoring',
						name: '监控运维',
						open: false,
						pages: [
							{
								name: '导航栏带自定义按钮',
								url: 'nav-button'
							},
						]
					},
					
					// #endif
					// #ifdef MP-WEIXIN || H5
					{
						url: 'ProjectMap',
						name: '项目地图展示',
						// open: false,
						// pages: [
						// 	{
						// 		name: '导航栏带自定义按钮',
						// 		url: 'nav-button'
						// 	},
						// ]
					},
					{
						id: 'ProjectListMap',
						name: '项目列表分地区展示',
						open: false,
						pages: [
							{
								name: '导航栏带自定义按钮',
								url: 'nav-button'
							},
						]
					},{
						id: 'Add',
						name: '添加新项目',
						open: false,
						pages: [
							{
								name: '导航栏带自定义按钮',
								url: 'nav-button'
							},
						]
					},{
						id: 'projectManagement',
						name: '项目管理',
						open: false,
						pages: [
							{
								name: '列表',
								url: 'nav-button'
							},
							{
								name: '策略',
								url: 'nav-button'
							},
							{
								name: '统计',
								url: 'ucharts',
								sub: 'storage'
							},{
								name: '项目信息',
								url: 'nav-button'
							},
						]
					},{
						id: 'PowerSaving',
						name: '省电量及碳排放量',
						open: false,
						pages: [
							{
								name: '导航栏带自定义按钮',
								url: 'nav-button'
							},
						]
					},{
						id: 'Group',
						name: '分组管理',
						open: false,
						pages: [
							{
								name: '导航栏带自定义按钮',
								url: 'nav-button'
							},
						]
					},{
						id: 'Terminal',
						name: '终端管理',
						open: false,
						pages: [
							{
								name: '导航栏带自定义按钮',
								url: 'nav-button'
							},
						]
					},
					
					// {
					//     name: '密码修改',
					//     url: 'vant-button'
					// },
					// {
					//     name: '退出登录',
					//     url: 'vant-button'
					// }
					// #endif
				]
			}
		},
		// onShareAppMessage() {
		// 	return {
		// 		title: '欢迎体验uni-app',
		// 		path: '/pages/tabBar/template/template'
		// 	}
		// },
		// onNavigationBarButtonTap(e) {
		// 	uni.navigateTo({
		// 		url: '/pages/about/about'
		// 	});
		// },
		computed: {
			...mapState({
				hasLeftWin: state => !state.noMatchLeftWindow,
				leftWinActive: state => state.leftWinActive.split('/')[3],
				activeOpen: state => state.activeOpen
			})
		},
		// #ifdef H5
		watch:{
			$route: {
				immediate: true,
				handler(newRoute) {
					if (newRoute.matched.length) {
						this.setLeftWinActive(newRoute.path)
						let path = newRoute.path.split('/')[3]
						for (const item of this.list) {
							if (Array.isArray(item.pages)) {
								for (const page of item.pages) {
									if (page === path) {
										this.setActiveOpen(item.id)
									}
									if (page.url && page.url === path) {
										this.setActiveOpen(item.id)
									}
								}
							}
						}
					}
				}
			}
		},
		// #endif
		methods: {
			...mapMutations(['setMenu', 'setMatchLeftWindow', 'setLeftWinActive', 'setActiveOpen']),
			triggerCollapse(e, id) {
				if (!this.list[e].pages) {
					this.goDetailPage(this.list[e].url);
					return;
				}
				if (id === this.activeOpen) {
					id = ''
				}
				this.setActiveOpen(id)
			},
			goDetailPage(e) {
				let path = e.url ? e.url : e;
				let url = path + '/' + path
				switch(e.sub){
					case "storage": url = '/pages/storage/' + url;break;
					default: url = '/pages/solar/' + url;break;
				}
				if (this.hasLeftWin) {
					uni.reLaunch({
						url: url
					})
				} else {
					uni.navigateTo({
						url: url
					})
				}
				return false;
			}
		}
	}
</script>

<style>
	@import '@/common/uni-nvue.css';
</style>
